---

- name: Install firewalld
  dnf:
    name: firewalld
    state: latest

- name: Start firewalld
  systemd:
    name: firewalld
    enabled: yes
    state: started

- name: Set default zone
  command: "firewall-cmd --set-default-zone={{ firewalld_default_zone }}"

- name: Configure default zone
  ansible.posix.firewalld:
    zone: "{{ firewalld_public_zone }}"
    state: enabled
    interface: "{{ public_interface }}"
    permanent: yes
  notify:
    - reconfigure firewall

- name: Open external ports
  ansible.posix.firewalld:
    zone: "{{ firewalld_public_zone }}"
    port: "{{ item }}"
    permanent: yes
    state: enabled
  loop:
    - 6443/tcp
    - "{{ wireguard_port }}/udp"
  notify:
    - reconfigure firewall

- name: Open masquerade
  ansible.posix.firewalld:
    zone: "{{ firewalld_public_zone }}"
    state: enabled
    masquerade: 'yes'
    permanent: yes
  notify:
    - reconfigure firewall

- name: Configure internal zone with wireguard interface
  ansible.posix.firewalld:
    zone: internal
    state: enabled
    interface: wg0
    permanent: yes
  notify:
    - reconfigure firewall

- name: Configure internal zone with cni interface
  ansible.posix.firewalld:
    zone: internal
    state: enabled
    interface: cni0
    permanent: yes
  notify:
    - reconfigure firewall

- name: Configure internal zone with flannel interface
  ansible.posix.firewalld:
    zone: internal
    state: enabled
    interface: flannel.1
    permanent: yes
  notify:
    - reconfigure firewall

# - name: Configure internal zone with tunnel interface
#   ansible.posix.firewalld:
#     zone: internal
#     state: enabled
#     interface: tunl0
#     permanent: yes
#   notify:
#     - reconfigure firewall

- name: Open masquerade on internal
  ansible.posix.firewalld:
    zone: internal
    state: enabled
    masquerade: 'yes'
    permanent: yes
  notify:
    - reconfigure firewall

- name: Open k3s and etcd ports
  ansible.posix.firewalld:
    zone: internal
    port: "{{ item }}"
    permanent: yes
    state: enabled
  loop:
    - 6443/tcp # k8s api
    - 8472/udp # flannel VXLAN
    - 9100/tcp # prometheus node exporter
    - 10250/tcp # kubelet
    - 2379-2380/tcp # etcd client and peer
    - 179/tcp # BGP for calico
  notify:
    - reconfigure firewall

...
